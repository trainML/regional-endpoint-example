{"version":3,"sources":["config.js","UploadButton.js","Input.js","Results.js","Header.js","App.js","theme.js","index.js"],"names":["config","api_address","route_path","UploadButton","input","name","onChange","disabled","Fragment","Button","onClick","e","preventDefault","click","variant","color","endIcon","ref","element","hidden","type","useStyles","makeStyles","theme","image","maxWidth","maxHeight","paper","height","alignContent","display","alignItems","justifyContent","backgroundColor","grey","getImage","a","filename","target","files","Promise","resolve","reject","fr","FileReader","onload","result","readAsDataURL","file","base64result","split","contents","Input","onSubmit","classes","useState","setFilename","setImage","submitting","setSubmitting","Grid","container","direction","xs","item","Box","textAlign","Typography","className","alt","src","spacing","icon","Paper","palette","primary","main","table","Results","predictions","length","reversed","reverse","map","prediction","i","TableContainer","component","Table","size","TableHead","TableRow","TableCell","align","TableBody","row","scope","id","parseFloat","confidence","toFixed","logo","width","padding","brandBlack","header","contrastText","paddingTop","Header","md","href","uploadImage","axios","post","resp","data","response","console","log","status","App","setInput","setPredictions","Container","Object","entries","new_predictions","push","undefined","createTheme","light","secondary","brand","error","red","A400","background","default","typography","fontFamily","join","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"wPAKeA,EALA,CACbC,YAAa,GACbC,WAAY,gB,uGC+BCC,EA7BM,SAAC,GAAkC,IAClDC,EADkBC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAEtC,OACE,eAAC,IAAMC,SAAP,WACE,cAACC,EAAA,EAAD,CACEC,QAAS,SAACC,GACRA,EAAEC,iBACFR,EAAMS,SAERN,SAAUA,EACVO,QAAQ,YACRC,MAAM,YACNC,QAAS,cAAC,IAAD,IARX,SAUGX,IAGH,uBACEY,IAAK,SAACC,GAAD,OAAcd,EAAQc,GAC3BC,QAAM,EACNb,SAAU,SAACK,GACTA,EAAEC,iBACFN,EAASK,IAEXS,KAAK,aChBPC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,SAAU,OACVC,UAAW,QAEbC,MAAO,CACLC,OAAQ,QACRC,aAAc,SACdC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,gBAAiBC,IAAK,UAIpBC,EAAQ,uCAAG,WAAOxB,GAAP,mBAAAyB,EAAA,6DACTC,EAAW1B,EAAE2B,OAAOC,MAAM,GAAGlC,KADpB,SAEI,IAAImC,SAAQ,SAACC,EAASC,GACvC,IAAIC,EAAK,IAAIC,WACbD,EAAGE,OAAS,WACVJ,EAAQE,EAAGG,SAEbH,EAAGI,cAAcpC,EAAE2B,OAAOC,MAAM,OAPnB,cAETS,EAFS,OASTC,EAAeD,EAAKE,MAAM,KAAK,GATtB,kBAWR,CAAEb,WAAUc,SAAUF,IAXd,2CAAH,sDAyFCG,MA3Ef,YAAwC,IAAvB9C,EAAsB,EAAtBA,SAAU+C,EAAY,EAAZA,SACnBC,EAAUjC,IAChB,EAAgCkC,qBAAhC,mBAAOlB,EAAP,KAAiBmB,EAAjB,KACA,EAA0BD,qBAA1B,mBAAO/B,EAAP,KAAciC,EAAd,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEA,OAAItB,EAEA,eAACuB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,GAAI,GAAvC,UACE,cAACH,EAAA,EAAD,CAAMI,MAAI,EAACD,GAAI,GAAf,SACE,eAACE,EAAA,EAAD,CAAKC,UAAU,SAAf,UACE,cAACC,EAAA,EAAD,CAAYrD,QAAQ,KAApB,yBAEA,qBACEsD,UAAWd,EAAQ9B,MACnB6C,IAAI,WACJC,IAAG,gCAA2B9C,KAEhC,cAAC2C,EAAA,EAAD,CAAYrD,QAAQ,YAApB,SAAiCuB,SAGrC,uBACA,cAACuB,EAAA,EAAD,CAAMI,MAAI,EAACD,GAAI,GAAf,SACE,cAACE,EAAA,EAAD,CAAKC,UAAU,SAAf,SACE,eAACN,EAAA,EAAD,CAAMC,WAAS,EAAC7B,eAAe,SAAS+B,GAAI,GAAIQ,QAAS,EAAzD,UACE,cAACX,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAAC,EAAD,CACE3D,KAAK,kBACLC,SAAQ,uCAAE,WAAOK,GAAP,eAAAyB,EAAA,sEACYD,EAASxB,GADrB,OACFa,EADE,OAERiC,EAASjC,EAAM2B,UACfK,EAAYhC,EAAMa,UAClB/B,EAASkB,GAJD,2CAAF,0DAQZ,cAACoC,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAACvD,EAAA,EAAD,CACEK,QAAQ,YACRC,MAAM,UACNyD,KAAK,OACLjE,SAAUmD,EACV1C,QAAS,cAAC,IAAD,IACTN,QAAO,uCAAE,WAAOC,GAAP,SAAAyB,EAAA,6DACPzB,EAAEC,iBACF+C,GAAc,GAFP,SAGDN,IAHC,OAIPM,GAAc,GAJP,2CAAF,sDANT,wCAuBV,cAACc,EAAA,EAAD,CAAO3D,QAAQ,WAAWsD,UAAWd,EAAQ3B,MAA7C,SACE,cAAC,EAAD,CACEtB,KAAK,cACLC,SAAQ,uCAAE,WAAOK,GAAP,eAAAyB,EAAA,sEACYD,EAASxB,GADrB,OACFa,EADE,OAERiC,EAASjC,EAAM2B,UACfK,EAAYhC,EAAMa,UAClB/B,EAASkB,GAJD,2CAAF,2D,sDC5FZH,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCI,MAAO,CACLM,gBAAiBV,EAAMmD,QAAQC,QAAQC,MAEzCC,MAAO,OA2DMC,MAxDf,YAAmC,IAAhBC,EAAe,EAAfA,YACXzB,EAAUjC,IAChB,GAAK0D,EAAYC,OAEV,CACL,IAAMC,EAAW,YAAIF,GAAaG,UAClC,OACE,qCACE,cAACjB,EAAA,EAAD,CAAKC,UAAU,SAAf,SACE,cAACC,EAAA,EAAD,CAAYrD,QAAQ,KAApB,2BAEDmE,EAASE,KAAI,SAACC,EAAYC,GACzB,OACE,eAACzB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAA1B,UACE,uBACA,eAACW,EAAA,EAAD,CAAO3D,QAAQ,WAAWsD,UAAWd,EAAQ3B,MAA7C,UACE,cAACiC,EAAA,EAAD,CAAMI,MAAI,EAACD,GAAI,GAAf,SACE,cAACE,EAAA,EAAD,CAAKC,UAAU,SAAf,SACE,cAACC,EAAA,EAAD,CAAYrD,QAAQ,YAApB,SACGsE,EAAW/C,eAIlB,cAACiD,EAAA,EAAD,CAAgBC,UAAWd,IAA3B,SACE,eAACe,EAAA,EAAD,CAAOC,KAAK,QAAZ,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,yBACA,cAACA,EAAA,EAAD,CAAWC,MAAM,OAAjB,sBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,6BAGJ,cAACC,EAAA,EAAD,UACGV,EAAWA,WAAWD,KAAI,SAACY,GAAD,OACzB,eAACJ,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWL,UAAU,KAAKS,MAAM,MAAhC,SACGD,EAAI1F,OAEP,cAACuF,EAAA,EAAD,CAAWC,MAAM,OAAjB,SAAyBE,EAAIE,KAC7B,cAACL,EAAA,EAAD,CAAWC,MAAM,QAAjB,SACGK,WAA4B,IAAjBH,EAAII,YAAkBC,QAAQ,GAAK,QANpCL,EAAIE,mBArBSZ,SAVhD,OAAO,MChBLhE,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC8E,KAAM,CACJC,MAAO,SAET3E,MAAO,CACL4E,QAAShF,EAAMgD,QAAQ,GACvBL,UAAW,SACXjC,gBAAiBV,EAAMmD,QAAQ8B,WAAW5B,MAE5C6B,OAAQ,CACN1F,MAAOQ,EAAMmD,QAAQ8B,WAAWE,aAChCC,WAAY,YA8BDC,MA1Bf,WACE,IAAMtD,EAAUjC,IAChB,OACE,cAACoD,EAAA,EAAD,CAAOL,UAAWd,EAAQ3B,MAA1B,SACE,eAACiC,EAAA,EAAD,CAAMC,WAAS,EAACE,GAAI,GAApB,UACE,cAACH,EAAA,EAAD,CAAMI,MAAI,EAACD,GAAI,GAAI8C,GAAI,EAAvB,SACE,mBAAGC,KAAK,yBAAR,SACE,qBACEzC,IAAI,OACJD,UAAWd,EAAQ+C,KACnB/B,IAAI,kEAIV,cAACV,EAAA,EAAD,CAAMI,MAAI,EAACD,GAAI,GAAI8C,GAAI,EAAvB,SACE,cAAC5C,EAAA,EAAD,CAAKC,UAAU,OAAf,SACE,cAACC,EAAA,EAAD,CAAYrD,QAAQ,KAAKsD,UAAWd,EAAQmD,OAA5C,iDC3BNM,EAAW,uCAAG,iCAAA3E,EAAA,yDAASC,EAAT,EAASA,WAAUc,EAAnB,EAAmBA,UAAnB,0CAGK6D,IAAMC,KAAN,UACdjH,EAAOC,aADO,OACOD,EAAOE,YAC/B,CACEG,KAAMgC,EACNc,aAPU,cAGR+D,EAHQ,yBAUPA,EAAKC,MAVE,gCAYV,KAAMC,UACRC,QAAQC,IAAI,KAAMF,SAASG,QAC3BF,QAAQC,IAAI,KAAMF,WAElBC,QAAQC,IAAR,MAhBY,yDAAH,sDAyDFE,MAnCf,WACE,MAA0BjE,mBAAS,IAAnC,mBAAOnD,EAAP,KAAcqH,EAAd,KACA,EAAsClE,mBAAS,IAA/C,mBAAOwB,EAAP,KAAoB2C,EAApB,KAEA,OACE,eAAC9D,EAAA,EAAD,WACE,cAAC,EAAD,IACA,uBACA,cAAC+D,EAAA,EAAD,UACE,eAAC/D,EAAA,EAAD,CAAMC,WAAS,EAACE,GAAI,GAAIQ,QAAS,EAAjC,UACE,cAACX,EAAA,EAAD,CAAMI,MAAI,EAACD,GAAI,EAAf,SACE,cAAC,EAAD,CACEzD,SAAUmH,EACVpE,SAAQ,sBAAE,kCAAAjB,EAAA,sEACa2E,EAAY3G,GADzB,QACF0C,EADE,UAEK,EAAD,YACqB8E,OAAOC,QAAQ/E,GAAQ,GAD5C,GACHT,EADG,KACO+C,EADP,KAEVsC,GAAe,SAAC3C,GACd,IAAM+C,EAAe,YAAO/C,GAE5B,OADA+C,EAAgBC,KAAK,CAAE1F,WAAU+C,eAC1B0C,MAPH,+CAad,cAAClE,EAAA,EAAD,CAAMI,MAAI,EAACD,GAAI,EAAf,SACGgB,EAAc,cAAC,EAAD,CAASA,YAAaA,SAAkBiD,a,gBC1BpDzG,EA7BD0G,YAAY,CACxBvD,QAAS,CACPC,QAAS,CACPuD,MAAO,UACPtD,KAAM,WAERuD,UAAW,CACTD,MAAO,UACPtD,KAAM,WAERwD,MAAO,CACLxD,KAAM,WAER4B,WAAY,CACV5B,KAAM,UACN8B,aAAc,QAEhB2B,MAAO,CACLzD,KAAM0D,IAAIC,MAEZC,WAAY,CACVC,QAAS,SAGbC,WAAY,CACVC,WAAY,CAAC,QAAS,cAAcC,KAAK,QCtB7CC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAACC,EAAA,EAAD,CAAezH,MAAOA,EAAtB,UACE,cAAC0H,EAAA,EAAD,IACA,cAAC,EAAD,SAGJC,SAASC,eAAe,W","file":"static/js/main.a8612665.chunk.js","sourcesContent":["const config = {\n  api_address: '',\n  route_path: '/api/predict',\n};\n\nexport default config;\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport PublishIcon from '@material-ui/icons/Publish';\n\nconst UploadButton = ({ name, onChange, disabled }) => {\n  let input;\n  return (\n    <React.Fragment>\n      <Button\n        onClick={(e) => {\n          e.preventDefault();\n          input.click();\n        }}\n        disabled={disabled}\n        variant='contained'\n        color='secondary'\n        endIcon={<PublishIcon />}\n      >\n        {name}\n      </Button>\n\n      <input\n        ref={(element) => (input = element)}\n        hidden\n        onChange={(e) => {\n          e.preventDefault();\n          onChange(e);\n        }}\n        type='file'\n      />\n    </React.Fragment>\n  );\n};\nexport default UploadButton;\n","import { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport grey from '@material-ui/core/colors/grey';\nimport SendIcon from '@material-ui/icons/Send';\n\nimport UploadButton from './UploadButton';\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    maxWidth: '100%',\n    maxHeight: '100%',\n  },\n  paper: {\n    height: '600px',\n    alignContent: 'center',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: grey[300],\n  },\n}));\n\nconst getImage = async (e) => {\n  const filename = e.target.files[0].name;\n  const file = await new Promise((resolve, reject) => {\n    var fr = new FileReader();\n    fr.onload = () => {\n      resolve(fr.result);\n    };\n    fr.readAsDataURL(e.target.files[0]);\n  });\n  const base64result = file.split(',')[1];\n\n  return { filename, contents: base64result };\n};\n\nfunction Input({ onChange, onSubmit }) {\n  const classes = useStyles();\n  const [filename, setFilename] = useState();\n  const [image, setImage] = useState();\n  const [submitting, setSubmitting] = useState(false);\n\n  if (filename) {\n    return (\n      <Grid container direction='column' xs={12}>\n        <Grid item xs={12}>\n          <Box textAlign='center'>\n            <Typography variant='h5'>Input Image</Typography>\n\n            <img\n              className={classes.image}\n              alt='uploaded'\n              src={`data:image/png;base64,${image}`}\n            />\n            <Typography variant='subtitle1'>{filename}</Typography>\n          </Box>\n        </Grid>\n        <br />\n        <Grid item xs={12}>\n          <Box textAlign='center'>\n            <Grid container justifyContent='center' xs={12} spacing={3}>\n              <Grid item>\n                <UploadButton\n                  name='Upload New File'\n                  onChange={async (e) => {\n                    const image = await getImage(e);\n                    setImage(image.contents);\n                    setFilename(image.filename);\n                    onChange(image);\n                  }}\n                />\n              </Grid>\n              <Grid item>\n                <Button\n                  variant='contained'\n                  color='primary'\n                  icon='send'\n                  disabled={submitting}\n                  endIcon={<SendIcon />}\n                  onClick={async (e) => {\n                    e.preventDefault();\n                    setSubmitting(true);\n                    await onSubmit();\n                    setSubmitting(false);\n                  }}\n                >\n                  Get Prediction\n                </Button>\n              </Grid>\n            </Grid>\n          </Box>\n        </Grid>\n      </Grid>\n    );\n  } else {\n    return (\n      <Paper variant='outlined' className={classes.paper}>\n        <UploadButton\n          name='Upload File'\n          onChange={async (e) => {\n            const image = await getImage(e);\n            setImage(image.contents);\n            setFilename(image.filename);\n            onChange(image);\n          }}\n        />\n      </Paper>\n    );\n  }\n}\n\nexport default Input;\n","import { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  table: {},\n}));\n\nfunction Results({ predictions }) {\n  const classes = useStyles();\n  if (!predictions.length) {\n    return null;\n  } else {\n    const reversed = [...predictions].reverse();\n    return (\n      <>\n        <Box textAlign='center'>\n          <Typography variant='h5'>Predictions</Typography>\n        </Box>\n        {reversed.map((prediction, i) => {\n          return (\n            <Grid container direction='column' key={i}>\n              <br />\n              <Paper variant='outlined' className={classes.paper}>\n                <Grid item xs={12}>\n                  <Box textAlign='center'>\n                    <Typography variant='subtitle1'>\n                      {prediction.filename}\n                    </Typography>\n                  </Box>\n                </Grid>\n                <TableContainer component={Paper}>\n                  <Table size='small'>\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Class Name</TableCell>\n                        <TableCell align='left'>Class ID</TableCell>\n                        <TableCell align='right'>Confidence</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {prediction.prediction.map((row) => (\n                        <TableRow key={row.id}>\n                          <TableCell component='th' scope='row'>\n                            {row.name}\n                          </TableCell>\n                          <TableCell align='left'>{row.id}</TableCell>\n                          <TableCell align='right'>\n                            {parseFloat(row.confidence * 100).toFixed(2) + '%'}\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </Paper>\n            </Grid>\n          );\n        })}\n      </>\n    );\n  }\n}\n\nexport default Results;\n","import { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n  logo: {\n    width: '250px',\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    backgroundColor: theme.palette.brandBlack.main,\n  },\n  header: {\n    color: theme.palette.brandBlack.contrastText,\n    paddingTop: '15px',\n  },\n}));\n\nfunction Header() {\n  const classes = useStyles();\n  return (\n    <Paper className={classes.paper}>\n      <Grid container xs={12}>\n        <Grid item xs={12} md={3}>\n          <a href='https://www.trainml.ai'>\n            <img\n              alt='logo'\n              className={classes.logo}\n              src='https://www.trainml.ai/static/img/trainML-logo-purple.png'\n            />\n          </a>\n        </Grid>\n        <Grid item xs={12} md={9}>\n          <Box textAlign='left'>\n            <Typography variant='h3' className={classes.header}>\n              Image Classifier Endpoint\n            </Typography>\n          </Box>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n\nexport default Header;\n","import { useState } from 'react';\nimport axios from 'axios';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\n\nimport config from './config';\nimport Input from './Input';\nimport Results from './Results';\nimport Header from './Header';\n\nconst uploadImage = async ({ filename, contents }) => {\n  if (contents) {\n    try {\n      const resp = await axios.post(\n        `${config.api_address}${config.route_path}`,\n        {\n          name: filename,\n          contents,\n        }\n      );\n      return resp.data;\n    } catch (error) {\n      if (error.response) {\n        console.log(error.response.status);\n        console.log(error.response);\n      } else {\n        console.log(error);\n      }\n    }\n  }\n};\n\nfunction App() {\n  const [input, setInput] = useState({});\n  const [predictions, setPredictions] = useState([]);\n\n  return (\n    <Grid>\n      <Header />\n      <br />\n      <Container>\n        <Grid container xs={12} spacing={2}>\n          <Grid item xs={6}>\n            <Input\n              onChange={setInput}\n              onSubmit={async () => {\n                const result = await uploadImage(input);\n                if (result) {\n                  const [filename, prediction] = Object.entries(result)[0];\n                  setPredictions((predictions) => {\n                    const new_predictions = [...predictions];\n                    new_predictions.push({ filename, prediction });\n                    return new_predictions;\n                  });\n                }\n              }}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            {predictions ? <Results predictions={predictions} /> : undefined}\n          </Grid>\n        </Grid>\n      </Container>\n    </Grid>\n  );\n}\n\nexport default App;\n","import { red } from '@material-ui/core/colors';\nimport { createTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createTheme({\n  palette: {\n    primary: {\n      light: '#c924d2',\n      main: '#c924d2',\n    },\n    secondary: {\n      light: '#130201',\n      main: '#130201',\n    },\n    brand: {\n      main: '#c924d2',\n    },\n    brandBlack: {\n      main: '#130201',\n      contrastText: '#fff',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n  typography: {\n    fontFamily: ['Rubik', 'sans-serif'].join(','),\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}